AWSTemplateFormatVersion: '2010-09-09'
Description: 'The template used to create an ECS.'
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: ECS Service Information
      Parameters:
      - ECSClusterName
      - ServiceName
      - TaskDefinition
      - SubnetIDs
      - SecurityGroupIDs
      - DesiredCount

    - Label:
        default: LoadBalancer Information
      Parameters:
      - VpcID
      - LoadBalancerArn
      - ListenerPort
      - ListenerTestPort

    - Label:
        default: TargetGroup Information
      Parameters:
      # - TargetGroupName
      # - TargetGroupPort
      - HealthCheckPath
      # - TargetGroupSubName

    - Label:
        default: TaskDef Information
      Parameters:
      - ContainerName
      - ContainerPort

    ParameterLabels:
      VpcID:
        default: "VPC ID"
      SubnetIDs:
        default: "SubnetID(s). Comma Delimited List."
      SecurityGroupIDs:
        default: "SecurityGroupID(s). Comma Delimited List."
      # TargetGroupName:
      #   default: "TargetGroup Name"
      # TargetGroupPort:
      #   default: "TargetGroup Port"
      ContainerPort:
        default: "Container Port= TargetGroup Port"
      # TargetGroupSubName:
      #   default: "TargetGroup Sub Name (for Blue/Green Deploy)"
      ListenerTestPort:
        default: "Listener Test Port (for Canary Deploy)"

Parameters:
  ECSClusterName:
    Type: String
    Default: foo-server-cluster
  ServiceName:
    Type: String
    Default: firelens-service1
  TaskDefinition:
    Type: String
    Default: 'arn:aws:ecs:[AWS::Region]:[AWS::AccountId]:task-definition/firelens-example-taskdefinition:1'

# ECSをどのセキュリティグループで運用するか。
  SecurityGroupIDs:
    Type: List<AWS::EC2::SecurityGroup::Id>

# ECSをどのサブネットで運用するか。
# たぶんLB経由であればprivateでも構わないはず。
  SubnetIDs:
    Type: "List<AWS::EC2::Subnet::Id>"

  LoadBalancerArn:
    Type: String
    Default: arn:aws:elasticloadbalancing:[AWS::Region]:[AWS::AccountId]:loadbalancer/net/xxx/xxx

# ALBの外の待ち受けポート番号
  ListenerPort:
    Type: String
    Default: '8080'

  ListenerTestPort:
    Type: String
    Default: '9080'

  HealthCheckPath:
    Type: String
    # Default: '/status'
    Default: '/'

# タスク定義のコンテナ名 タスク定義から自動で決まっちゃう
  ContainerName:
    Type: String
    Default: app

  ContainerPort:
    Type: Number
    Default: '80'

# TargetGroupを配置するVPC ID
  VpcID:
    Type: "AWS::EC2::VPC::Id"

  DesiredCount:
    Type: Number
    Default: '2'

Resources:
  ECSService:
    Type: 'AWS::ECS::Service'
    Properties:
      Cluster: !Ref ECSClusterName
      CapacityProviderStrategy:
        -
          CapacityProvider: FARGATE
          Base: 0
          Weight: 1
      DeploymentController:
        Type: ECS
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 100
        DeploymentCircuitBreaker:
          Enable: true
          Rollback: true
      # LaunchType: FARGATE
      # DeploymentController:
      #   Type: CODE_DEPLOY
      TaskDefinition:
        Ref: TaskDefinition
      ServiceName:
        Ref: ServiceName
      SchedulingStrategy: REPLICA
      DesiredCount:
        Ref: DesiredCount
      LoadBalancers:
        -
          ContainerName: !Ref ContainerName
          ContainerPort: !Ref ContainerPort
          LoadBalancerName:
            Ref: 'AWS::NoValue'
          TargetGroupArn: !Ref TargetGroup
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          SecurityGroups:
            Ref: SecurityGroupIDs
          Subnets:
            Ref: SubnetIDs
      PlatformVersion: LATEST
      ServiceConnectConfiguration:
        Enabled: false
        # namespace: !Ref ECSClusterName
        # services:
        #   - portName: !Ref ContainerName
        #     clientAliases:
        #       - port: 4567
        # logConfiguration:
        #   logDriver: awslogs
        #   options:
        #     awslogs-group: ecs/hogehoge #@ data.values.account.logGroup
        #     awslogs-region: ap-northeast-1 #@ data.values.account.region
        #     awslogs-stream-prefix: !Sub '${ContainerName}-cluster-envoy' #@ data.values.yelbServices.appServer.name + '-' + data.values.cluster.name1 + "-envoy"
      Tags:
      - Key: Name
        Value: !Sub '${AWS::StackName}-ECS'
      EnableECSManagedTags: true
    DependsOn:
      - Listener
  TargetGroup:
    Type: 'AWS::ElasticLoadBalancingV2::TargetGroup'
    Properties:
      HealthCheckPath: !Ref HealthCheckPath
      Name: !Sub '${ServiceName}-group'
      Port: !Ref ContainerPort
      Protocol: HTTP
      TargetType: ip
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 20
      UnhealthyThresholdCount : 5
      VpcId:
        Ref: VpcID
      # TargetGroupAttributes: 
      #   - Key: "stickiness.enabled"
      #     Value: true
      #   - Key: "stickiness.type"
      #     Value: lb_cookie
      #   - Key: "stickiness.lb_cookie.duration_seconds"
      #     Value: 86400
  TargetGroupSub:
    Type: 'AWS::ElasticLoadBalancingV2::TargetGroup'
    Properties:
      HealthCheckPath: !Ref HealthCheckPath
      Name: !Sub '${ServiceName}-groupsub'
      Port: !Ref ContainerPort
      Protocol: HTTP
      TargetType: ip
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 20
      UnhealthyThresholdCount : 5
      VpcId:
        Ref: VpcID
      # TargetGroupAttributes: 
      #   - Key: "stickiness.enabled"
      #     Value: true
      #   - Key: "stickiness.type"
      #     Value: lb_cookie
      #   - Key: "stickiness.lb_cookie.duration_seconds"
      #     Value: 86400
  Listener:
    Type: 'AWS::ElasticLoadBalancingV2::Listener'
    Properties:
      DefaultActions:
        -
          Type: forward
          TargetGroupArn:
            Ref: TargetGroup
      LoadBalancerArn: !Ref LoadBalancerArn
      Port: !Ref ListenerPort
      Protocol: HTTP
      # Protocol: HTTPS
      # Certificates:
      #   - CertificateArn: !Ref CertificateArn
      # SslPolicy: ELBSecurityPolicy-TLS13-1-2-2021-06
  ListenerTest:
    Type: 'AWS::ElasticLoadBalancingV2::Listener'
    Properties:
      DefaultActions:
        -
          Type: forward
          TargetGroupArn:
            Ref: TargetGroupSub
      LoadBalancerArn: !Ref LoadBalancerArn
      Port: !Ref ListenerTestPort
      Protocol: HTTP
      # Protocol: HTTPS
      # Certificates:
      #   - CertificateArn: !Ref CertificateArn
      # SslPolicy: ELBSecurityPolicy-TLS13-1-2-2021-06